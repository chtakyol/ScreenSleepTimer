# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  desc "Build and sign APK with the provided keystore"
  lane :build_signed_apk do
    UI.message("Fastlane working directory: #{Dir.pwd}")
    UI.message("Keystore path: #{ENV['KEYSTORE_FILE']}")

    sh <<~SH
      echo "Absolute path:"
      realpath "#{ENV['KEYSTORE_FILE']}" || echo "realpath failed"

      echo "File details:"
      ls -lh "#{ENV['KEYSTORE_FILE']}" || echo "File not found"
    SH

    gradle(
      task: "clean assembleRelease",
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_FILE"],
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
      }
    )
  end

  desc "Deploy test version to Firebase"
  lane :upload_debug_apk_to_firebase do
#     firebase_app_distribution(
#       app: ENV["FIREBASE_APP_ID"],
#       apk_path: "./app-debug.apk",
#       firebase_cli_token: ENV["FIREBASE_CLI_TOKEN"]
#     )
  end
end
